/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void Serial_list_click1(GDropList source, GEvent event) { //_CODE_:Serial_list:454003:
  println("dropList1 - GDropList >> GEvent." + event + " @ " + millis());
  selectedPortIndex = source.getSelectedIndex();
  background(0);

  
} //_CODE_:Serial_list:454003:

public void start_listening(GButton source, GEvent event) { //_CODE_:start_button:400999:
  println("start_button - GButton >> GEvent." + event + " @ " + millis());
  try {
    myPort = new Serial(this, Serial.list()[selectedPortIndex],115200);
    port_available = true;
    //myPort.bufferUntil(lf);
    stop_button.setEnabled(true);
    println("Port available");
  } 
  catch(RuntimeException e) { 
    println("Port unavailable");
    port_available = false;
    stop_button.setEnabled(false);
  }
  //println(port_available);
  //println(Serial.list()[selectedPortIndex]);
} //_CODE_:start_button:400999:

public void stop_listening(GButton source, GEvent event) { //_CODE_:stop_button:273079:
  println("stop_button - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:stop_button:273079:

public void reset_display(GButton source, GEvent event) { //_CODE_:clear_button:315845:
  println("clear_button - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:clear_button:315845:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.ORANGE_SCHEME);
  G4P.setCursor(CROSS);
  surface.setTitle("Sketch Window");
  Serial_list = new GDropList(this, 90, 10, 300, 80, 3);
  Serial_list.setItems(loadStrings("list_454003"), 0);
  Serial_list.addEventHandler(this, "Serial_list_click1");
  label1 = new GLabel(this, 10, 10, 74, 20);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("COM port");
  label1.setLocalColorScheme(GCScheme.BLUE_SCHEME);
  label1.setOpaque(false);
  start_button = new GButton(this, 400, 10, 80, 20);
  start_button.setText("Start");
  start_button.addEventHandler(this, "start_listening");
  stop_button = new GButton(this, 490, 10, 80, 20);
  stop_button.setText("Stop");
  stop_button.addEventHandler(this, "stop_listening");
  clear_button = new GButton(this, 580, 10, 80, 20);
  clear_button.setText("Clear");
  clear_button.addEventHandler(this, "reset_display");
}

// Variable declarations 
// autogenerated do not edit
GDropList Serial_list; 
GLabel label1; 
GButton start_button; 
GButton stop_button; 
GButton clear_button; 
